import fs from 'fs';
import path from 'path';

function parse(content) {
  const result = {};
  const lines = content.split(/\r?\n/);
  for (const line of lines) {
    const trimmed = line.trim();
    if (!trimmed || trimmed.startsWith('#')) {
      continue;
    }
    const equalsIndex = trimmed.indexOf('=');
    if (equalsIndex === -1) {
      continue;
    }
    const key = trimmed.slice(0, equalsIndex).trim();
    let value = trimmed.slice(equalsIndex + 1).trim();
    if (
      (value.startsWith('"') && value.endsWith('"')) ||
      (value.startsWith("'") && value.endsWith("'"))
    ) {
      value = value.slice(1, -1);
    }
    if (!key) {
      continue;
    }
    result[key] = value;
  }
  return result;
}

export function config(options = {}) {
  const envPath = options.path
    ? path.resolve(options.path)
    : path.resolve(process.cwd(), '.env');

  if (!fs.existsSync(envPath)) {
    return { parsed: {} };
  }

  const content = fs.readFileSync(envPath, 'utf8');
  const parsed = parse(content);

  for (const [key, value] of Object.entries(parsed)) {
    if (typeof process.env[key] === 'undefined') {
      process.env[key] = value;
    }
  }

  return { parsed };
}

export default { config };
